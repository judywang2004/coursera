WEBVTT

1
00:00:02.380 --> 00:00:05.780
So, are you ready for the next exercise?

2
00:00:05.780 --> 00:00:07.279
Gulp, it is.

3
00:00:09.544 --> 00:00:14.447
Before you start this exercise,
the first thing I would like you to do is

4
00:00:14.447 --> 00:00:19.104
to go to the confusion folder, and
then go inside node modules, and

5
00:00:19.104 --> 00:00:23.870
then delete everything inside
the node modules folder.

6
00:00:23.870 --> 00:00:27.540
We are not going to be using Grunt in this
exercise, we are going to be using Gulp.

7
00:00:27.540 --> 00:00:35.440
So we will install all the Gulp
plugins into this folder.

8
00:00:35.440 --> 00:00:38.730
Going back to the node modules folder,

9
00:00:38.730 --> 00:00:43.450
now we're gonna make some
changes to the project.

10
00:00:45.550 --> 00:00:51.299
First, open package.json file and
then replace the contents

11
00:00:51.299 --> 00:00:56.513
of the package.json file with
the contents shown here.

12
00:00:56.513 --> 00:01:05.978
So we are again dress toting the
package.json file two weeks empty state so

13
00:01:05.978 --> 00:01:11.087
that we can start installing all the gulp

14
00:01:11.087 --> 00:01:16.061
plugins and gulp/ related packages.

15
00:01:16.061 --> 00:01:21.964
Next, at the command prompt,

16
00:01:21.964 --> 00:01:27.200
type npm install -g gulp.

17
00:01:27.200 --> 00:01:31.165
Remember if you

18
00:01:31.165 --> 00:01:37.265
are using Mac or Linux,

19
00:01:37.265 --> 00:01:43.368
use sudo in front of it.

20
00:01:46.038 --> 00:01:49.965
Once Gulp has installed and completed,

21
00:01:49.965 --> 00:01:56.331
then you're going to install
the Gulp locally with our project.

22
00:01:59.501 --> 00:02:05.234
At the command prompt,

23
00:02:05.234 --> 00:02:10.395
type npm install gulp

24
00:02:10.395 --> 00:02:14.700
--save-dev.

25
00:02:16.867 --> 00:02:22.927
Next, I am going to install all the Gulp
plugins and load modules that I'm

26
00:02:22.927 --> 00:02:29.410
gonna make use of in this exercise in one
shot rather than doing them one by one.

27
00:02:31.630 --> 00:02:36.370
And the command prompt,
type in the statement and

28
00:02:36.370 --> 00:02:41.380
the let all the,
Gulp plugins be installed.

29
00:02:41.380 --> 00:02:43.162
It'll take a few minutes.

30
00:02:51.784 --> 00:02:54.379
After waiting for quite a few minutes,

31
00:02:54.379 --> 00:02:59.280
everything will get installed
on your machine in one shot.

32
00:02:59.280 --> 00:03:02.960
Next, let's go ahead and
configure our Gulp file.

33
00:03:05.320 --> 00:03:09.660
Go to the conFusion folder
in your text editor and

34
00:03:09.660 --> 00:03:15.780
then create a new file named
gulpfile.js with a small g.

35
00:03:16.920 --> 00:03:22.690
Now we're going to paste in all the Gulp
related tasks into this file step by step.

36
00:03:25.130 --> 00:03:29.510
First I'm going to load in all
the plugins that I have just installed.

37
00:03:31.700 --> 00:03:37.113
In the gulp file I am now importing all
the plugins that I have just installed.

38
00:03:40.437 --> 00:03:46.451
Next I have pasted in the code for
the jshint,

39
00:03:46.451 --> 00:03:51.372
the clean and the default task here.

40
00:03:53.648 --> 00:03:59.770
Next I paste in the code for the usemin
task, which we have examined before.

41
00:04:01.900 --> 00:04:06.869
After this I have pasted in the code for
the imagemin task.

42
00:04:09.766 --> 00:04:15.040
Next I pasted in the code for
the copyfonts task.

43
00:04:15.040 --> 00:04:19.080
Now I did not explain
the copy font task earlier.

44
00:04:19.080 --> 00:04:25.470
Now what the copy font task does
is it uses the gulp source and

45
00:04:25.470 --> 00:04:30.020
then reads in all the font files from

46
00:04:30.020 --> 00:04:35.860
the copyfonts and
the boot strap disk folders, and

47
00:04:35.860 --> 00:04:42.920
then pipes all those files directly to the
destination folder, which is dist fonts.

48
00:04:42.920 --> 00:04:46.070
There's no transformation
to be done to these files.

49
00:04:46.070 --> 00:04:51.060
They just need to be copied from
the bower components folders

50
00:04:51.060 --> 00:04:53.490
to the dist fonts folder.

51
00:04:53.490 --> 00:04:56.410
So I'm just coping them using the pipe g/.

52
00:04:56.410 --> 00:04:59.080
No addition transformation is being done.

53
00:05:02.990 --> 00:05:09.940
Finally, I pasted the code for
the watch and the BrowserSync.

54
00:05:09.940 --> 00:05:14.344
We have only examined this code
in the lecture previously so

55
00:05:14.344 --> 00:05:17.770
I'm not going into more
details about on this.

56
00:05:17.770 --> 00:05:25.191
Now once we have completed all this, then
we'll go ahead and save the gulp file.

57
00:05:27.954 --> 00:05:32.720
Returning to the Terminal,
now add the prompt.

58
00:05:32.720 --> 00:05:36.790
If I type in gulp this is
going to run the default task.

59
00:05:36.790 --> 00:05:40.890
The default task cleans up
the distribution folder if it exists and

60
00:05:40.890 --> 00:05:44.880
then does the JS hinting.

61
00:05:44.880 --> 00:05:52.300
The usemin and the imagemin and
copy force tasks.

62
00:05:52.300 --> 00:05:56.850
So let's go ahead and
run using just gulp and the prompt.

63
00:05:58.260 --> 00:06:02.830
Once you run the gulp command
then you would notice that there

64
00:06:04.610 --> 00:06:06.910
first, the clean task is run.

65
00:06:08.060 --> 00:06:11.670
Then, the default task starts,

66
00:06:11.670 --> 00:06:16.390
which includes the JS hinting,
the image main clean.

67
00:06:16.390 --> 00:06:22.720
And the default tasks all are started
together, the copy font tasks,

68
00:06:22.720 --> 00:06:27.189
and once they all complete, then your
distribution folder is now ready.

69
00:06:31.960 --> 00:06:36.810
Going to the confusion folder you can
now see that the dispersion folder has

70
00:06:36.810 --> 00:06:38.300
been prepared.

71
00:06:38.300 --> 00:06:42.120
Going into the dispersion
folder you can see that we have

72
00:06:43.240 --> 00:06:46.200
the fonts all ready copied there.

73
00:06:46.200 --> 00:06:51.320
We have all the images that have
been optimized and copied here.

74
00:06:51.320 --> 00:06:53.320
We have the menu.html.

75
00:06:53.320 --> 00:06:58.250
Inside the scripts file,
notice that we have the main.js.

76
00:06:58.250 --> 00:07:04.100
Again, using the rev,
the rev that we used in Gulp

77
00:07:04.100 --> 00:07:09.810
is somewhat different from the file
route that we used with Grunt but

78
00:07:09.810 --> 00:07:17.280
they achieve similar results meaning
that the main will have some random

79
00:07:21.220 --> 00:07:24.380
strings of characters
attached to the name.

80
00:07:28.040 --> 00:07:29.710
Same thing with ties.

81
00:07:29.710 --> 00:07:32.280
You can see that the main
RCS is filed there.

82
00:07:34.200 --> 00:07:37.920
Now, if you open the main user HTML file,

83
00:07:37.920 --> 00:07:41.430
it should work correctly
in your default browser.

84
00:07:43.430 --> 00:07:49.058
So you can see the menu.html file being
served up in your default browser here.

85
00:07:51.524 --> 00:07:58.300
Recall that in the Gulp file, I configured
the Watch task and the BrowserSync task.

86
00:07:58.300 --> 00:08:01.210
Let's see how these two work together.

87
00:08:01.210 --> 00:08:06.230
To do that, at the command prompt
I'm gonna type Gulp watch.

88
00:08:11.460 --> 00:08:14.290
This will cause the watch
task to be executed.

89
00:08:14.290 --> 00:08:19.910
When the watch task executes, it'll cause
the BrowserSync task to be executed

90
00:08:19.910 --> 00:08:24.190
before that, and that in turn will
cause the default task to be executed,

91
00:08:24.190 --> 00:08:27.518
which means that first your
distribution folder is built.

92
00:08:27.518 --> 00:08:34.450
Then the BrowserSync will load
the page into your default browser

93
00:08:34.450 --> 00:08:40.100
by starting a server, and then the Watch
task will keep your watch on the files.

94
00:08:40.100 --> 00:08:42.480
So let's run this and see the result.

95
00:08:44.960 --> 00:08:51.550
You will note that
the BrowserSync now starts up,

96
00:08:51.550 --> 00:08:54.400
and then opens the web page
in the default browser.

97
00:08:55.605 --> 00:08:59.940
BrowserSync seems to have a little bit
of problem adjusting here to Gulp.

98
00:08:59.940 --> 00:09:03.779
Now, you would see that it'll
show this thing called get all

99
00:09:03.779 --> 00:09:05.850
cannot get slash here.

100
00:09:05.850 --> 00:09:12.120
Just reload the page and
then you will see the webpage coming in.

101
00:09:12.120 --> 00:09:18.380
There seems to be some little
issue with not having the index

102
00:09:18.380 --> 00:09:23.675
not start the HTML file but after this,
everything works perfectly fine.

103
00:09:24.840 --> 00:09:29.310
So you can see that the menu.html
file is served up here.

104
00:09:29.310 --> 00:09:35.140
Now just like what we saw with live
reload, I'm now going to go and

105
00:09:35.140 --> 00:09:42.440
then edit the html file,
the menu.html file in the app folder.

106
00:09:42.440 --> 00:09:47.260
And then you would see the behavior of how
BrowserSync automatically syncs the page.

107
00:09:48.400 --> 00:09:53.253
Going to the menu.html page,
now for the tabs there,

108
00:09:53.253 --> 00:09:57.684
I'm going to remove that
space between the the and

109
00:09:57.684 --> 00:10:01.077
the menu there and then save the file.

110
00:10:04.375 --> 00:10:11.677
You would note that Watch task notices
that this html file has changed and

111
00:10:11.677 --> 00:10:16.584
then it will Usenet task and
then that, in turn,

112
00:10:16.584 --> 00:10:21.266
will trigger BrowserSync
to reload the page.

113
00:10:21.266 --> 00:10:27.732
So if I now go to the webpage, you will
see the modified webpage being loaded.

114
00:10:27.732 --> 00:10:32.361
Going to the webpage you notice
that the modified webpages will

115
00:10:32.361 --> 00:10:35.079
already be loaded into the browser.

116
00:10:37.113 --> 00:10:42.833
When you go to your terminal,
you will, or your command window,

117
00:10:42.833 --> 00:10:48.657
you will notice that Gulp has noticed
the change in the HTML page and

118
00:10:48.657 --> 00:10:52.921
then it re-runs the usemin task and
after that,

119
00:10:52.921 --> 00:10:57.602
since the files the distribution
folder's change,

120
00:10:57.602 --> 00:11:01.950
the browser sync will
notice what the change.

121
00:11:01.950 --> 00:11:07.335
And then it'll reload
the page in my browser.

122
00:11:07.335 --> 00:11:12.764
This completes the gulp
exercise I hope that

123
00:11:12.764 --> 00:11:18.342
quick run-through gulp was informative for

124
00:11:18.342 --> 00:11:23.330
you to understand how gulp can be used for

125
00:11:23.330 --> 00:11:30.660
configuring and
running your web development tasks.

126
00:11:30.660 --> 00:11:35.470
Now this exercise I went through
more quickly than Grant,

127
00:11:35.470 --> 00:11:38.260
because you have seen all
these steps with Grant.

128
00:11:38.260 --> 00:11:40.120
I'm just repeating all
the steps with Gulp.

129
00:11:42.310 --> 00:11:48.304
Hopefully you have understood the,
functionality,

130
00:11:48.304 --> 00:11:56.132
and the advantages that the task
runners bring to our web development.

131
00:11:56.132 --> 00:12:01.034
Now that you have completed the gulp
exercise, it's time for a Big Gulp,

132
00:12:01.034 --> 00:12:02.868
7-Eleven, here I come.